# Nurislam 02.02.2023
# Задание 1:
# 1.  Найдите сумму всех чисел меньше 1000, кратных 3 или 5.

# a = 0
# for i in range(1000):
#     if i % 3 == 0 or i % 5 == 0:
#         a += i
# print(a)
# ____________________________________________________________
# Задание 2
# 1. Написать скрипт который проходится по ключам и проверяет значения
# a) Если значение делиться на 3, то записываем строку “Hi”
# b) Если значение делиться на 5, то записываем строку “Bye”
# ПРИМЕР:
# Дано -> dict1 = {'a': 5, 'b': 3, 'c': 8, 'd': 14}
# Результат -> a = Bye
# b = Hi

# d = {'a': 5, 'b': 3, 'c': 8, 'd': 14, 'e': 30}
# for key, value in d.items():
#     if value % 3 == 0:
#         print(key, "= Hi")
#     if value % 5 == 0:
#         print( key, "= Bye")

# ___________________________________________________________________
# 2
# 1 Напишите программу, которая берёт текст и выводит два слова:
# 2.Наиболее часто встречающееся
# 3.Cамое длинное

# text = '''
# В 1960-е годы в СССР начались попытки запускать аппараты к Венере в рамках космической программы «Венера».
# Первый пуск был неудачными, но уже второй аппарат Венера-1 достиг зоны действия тяготения планеты,где с ним было потеряна связь — он пролетел на расстоянии 100 000 км от поверхности.
# В 1965 году результат был уже лучше — 24 000 км.Венера-4 доставила спускаемый аппарат и смогла получить данные о давлении,
# что использовали при построении следующих аппаратов.Венера-7 впервые совершила мягкую посадку на другую планету — в 1970-м году.
# А Венера-9 в 1975 году впервые передала телевизионную панораму с Венеры на Землю.'''
# a = text.split()
# new_text = set(a)
# counter = 1
# el = ''
# word = ''
# word_len = 0
# for i in new_text:
#     if a.count(i) > word_len:
#         counter = a.count(i)
#         el = i
#     if len(i) > word_len:
#         word_len = len(i)
#         word = i
# print("word ", el, ":", counter )
# print("Самое длинное слово это: ", word)
#  Находим самое длинное слово
# sp = text.split()
# counter = 0
# for i in sp:
#     if len(i) > counter:
#         counter = len(i)
#         word = i
# ______________________________________________________________________
# 3 Слияние словарей
# Напишите программу для слияния нескольких словарей в один.

# my_friends = {"Joomart": "+996555246810",
#               "Adinai": "+996555013579",
#               "Ermek": "+996777013579",
#               "Atai": "+996777246810",
#               "Aslan": "+996999246810"}
# his_her_friends = {"Lyazat": "+996551123456",
#                    "Salavat": "+996552234567",
#                    "Daniyar": "+996553345678",
#                    "Bolot": "+996554456789",
#                    "Alymbek": "+996555501234",
#                    "Dastan": "+996556678912",
#                    "Maksat": "+996557789012",
#                    "Aibek": "+996558890123"}
# # our_friends = {}
# # our_friends.update(my_friends)
# # our_friends.update(his_her_friends)
# # print(our_friends)
# # 2 example
# our_friends = {**my_friends, **his_her_friends}
# print(our_friends)
# ________________________________________________________________________
# Задание 3
# 1. Даны списки:
# list_1 = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# list_2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
# # Нужно вернуть список, который состоит из элементов, которые есть либо только в первом, либо только во втором
# s1 = set(list_1)
# s2 = set(list_2)
# print(s1.difference(s2))
# print(s2.difference(s1))
# __________________________________________________________________________
# 2.
# list_1 = [2, 8, 1, 2, 5, 3, 4, 6, 7, 9, 10, 8, 11, 17, 13]
# Для каждого числа выведите слово YES (в отдельной строке), если это число ранее встречалось в
# последовательности или NO, если не встречалось.
# list_1 = [2, 8, 1, 2, 5, 3, 4, 6, 7, 9, 10, 8, 11, 17, 13]
# s = set()
# for i in list_1:
#     if i in s:
#         print(i, "YES")
#     else:
#         s.add(i)
#         print(i, "NO")
# 2 example
# list_1 = [2, 8, 1, 2, 5, 3, 4, 6, 7, 9, 10, 8, 11, 17, 13]
# count1 = 1
# print(list_1.count(0))
# for i in list_1:
#     if list_1.count(i) > 1:
#         print('Yes:' , i)
#     else:
#         print('No: ', i)
# ___________________________________________________________________________
# Аня и Боря любят играть в разноцветные кубики, причем у каждого из них свой набор и в каждом наборе все кубики различны
# по цвету. Однажды дети заинтересовались, сколько существуют цветов таких, что кубики каждого цвета присутствуют в
# обоих наборах. Для этого они занумеровали все цвета случайными числами от 0 до 10^8. На этом их энтузиазм иссяк,
# поэтому вам предлагается помочь им в оставшейся части.
# В первой строке входных данных записаны числа N и M — число кубиков у Ани и Бори. В следующих N
# строках заданы номера цветов кубиков Ани. В последних M строках номера цветов Бори.
# Найдите три множества: номера цветов кубиков, которые есть в обоих наборах; номера цветов
# кубиков, которые есть только у Ани и номера цветов кубиков, которые есть только у Бори. Для каждого из
# множеств выведите сначала количество элементов в нем, а затем сами элементы, отсортированные по возрастанию.

# я это скопировал из интернета - и сам не понял! Спросить описание

# N,M =[int(i) for i in input().split()]
# kub_anna = set(int(input()) for _ in range(N))
# kub_boris = set(int(input()) for _ in range(M))
# for i in (kub_anna & kub_boris,kub_anna - kub_boris,kub_boris - kub_anna):
#     print(len(i))
#     print(*(sorted(i)))
# 2 example
# n = 5
# m = 7
# kub_anna = set()
# kub_boris = set()
# for i in range(n):
#     kub_anna.add(int(input('Введите цвет Ани (число): ')))
# for i in range(m):
#     kub_boris.add(int(input('Введите цвет Бориса (число) : ')))
#
# print('Колличество цветов, которые есть у обоих: ',len(kub_anna.intersection(kub_boris)), sorted(kub_anna.intersection(kub_boris)))
# print('Колличество цветов, которые есть только у Ани: ', len(kub_anna.difference(kub_boris)),
#                                                     sorted(kub_anna.difference(kub_boris)))
# # метод .difference() - можно заменить " - " типа: kub_anna - kub_boris
# print('Колличество цветов, которые есть только у Бориса: ', len(kub_boris - kub_anna),
#                                                     sorted(kub_boris - kub_anna))
# print(kub_anna)
# print(kub_boris)
# _____________________________________________________________________________
# Задание 4
# 1. Допустим у нас есть список языков программирования. lang1 = 'Rust'
#  languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
#  Обязательное условие: если переменная в списке, то нужно вывести на экран 'this languages is in list'.
#  Если этого языка нет в списке, ничего не нужно выводить.
# lang1 = 'Rust'
# languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
# if lang1 in languages:
#     print('Yes')
# else:
#     print('No')
# _____________________________________________________________________________
# 2. Будем работать с тем же списком: languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
# С помощью цикла нужно “перебрать” все языки в списке, и когда код доходит до “php”, цикл должен быть прерван.
# languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
# for i in languages:
#     if i == 'php':
#         break
#     print(i)
# _____________________________________________________________________________
# Напишите код, который берёт цифру 7, умножает саму на себя же 5 раз.
# a = 7
# b = a
# for i in range(4):
#     b = b * 7
#     print(b)
# _____________________________________________________________________________
# 4. Напишите код, который выведет на экран список языков с нумерацией.
# languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
# Вывод:
#  0 go
#  1 java
#  2 php
#  3 python
#  4 javascript
#  5 ruby

# languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
# for i, j in enumerate(languages, 0):
#     print(i, j)
# 2 example
# languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
# counter = 0
# for i in languages:
#     print(counter, i)
#     counter+=1
# print(i)
# 3 example
# languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
# counter = 0
# for i in range(len(languages)):
#     print(i, languages[i])
# _____________________________________________________________________________
# 5. Напишите цикл который выведет на экран:
# 1,2,3,4,5,6,7,8,9,10,9,8,7,6,5,4,3,2,1
# Усиление:
# Получите такой же результат но с ОДНИМ циклом

# Нашел в интернете, но ничего не понял. Спросить у ментора, если будет время

# for i in range(1, 11):
#     print(i, end=',')
# print('\n')
# print(list(range(10,0,-1)))
# # 2 example
# for i in (list(range(1, 11)) + list(range(9,0,-1))):
#     print(i, end=',')
# 3 example
# for i in range(1, 11):
#     print(i if i <= 10 else 10 - i + 1, end=',')
# _____________________________________________________________________________
#  6. У вас есть список имён:
# names = ('Максат','Лязат','Данияр','Айбек','Атай','Салават','Адинай',
#          'Жоомарт','Алымбек','Эрмек','Дастан','Бекмамат','Аслан',)
# Если первое имя = 0, второе имя = 1 и т.д.
#  Выведите на экран всё имена которые лежат на чётных числах

# names = ('Максат','Лязат','Данияр','Айбек','Атай','Салават','Адинай',
#          'Жоомарт','Алымбек','Эрмек','Дастан','Бекмамат','Аслан',)
# for i, name in enumerate(names):
#     if i % 2 == 0:
#         print(name)
# _____________________________________________________________________________
# 7. У вас всё тот же список имён:
# names = ('Максат','Лязат','Данияр','Айбек','Атай','Салават','Адинай','Жоомарт','Алымбек','Эрмек','Дастан','Бекмамат','Аслан',)
#  Выведите каждое 2 имя.
#  Подсказка: Всего имён 13.

# А вот это я не понял

# names = ('Максат','Лязат','Данияр','Айбек','Атай','Салават','Адинай',
#          'Жоомарт','Алымбек','Эрмек','Дастан','Бекмамат','Аслан',)
# for i, name in enumerate(names):
#     if (i + 1) % 2 == 0:
#         print(name)
# _____________________________________________________________________________
# 8. Есть переменная которая хранит в себе число:
#  Необходимо написать следующие условия для проверки переменной:
#     1. Это число трёхзначное?
#      2. Это число положительное и чётное?
#     3. Это число делится на 31 без остатка?
#    4. Если это число больше 100 и оно делится на 17 без остатка или это число больше
# 150 и равно 13**2 тогда показать что это за число
# n = 310
#
# if n > 99 and n < 1000 or n < 99 and n > -1000:
#     print('Да, трехзначное число')
# if  n > 0 and n % 2 == 0:
#     print('Да, четное и положительное число')
# if n % 31 == 0:
#     print("Делится на 31")
# if n > 100 and n % 17 == 0 or n > 150 and n == 13 ** 2:
#     print(n)
# __________________________________________________________________________________
# 9. Сгенерировать 200 чисел от -100 до 100:
#   1. Каждое число которое делиться на 13 без остатка возводить в квадрат если оно чётное
#   2. Каждое 7 число проверять на НЕчестность и выводить на экран если оно нечётное.
#   3. Посчитать сколько чисел подходят под первое условие
#   4. Посчитать сколько чисел подходят под второе условие
# print(list(range(-100,100)))
# cnt = 1
#
# for i in range(-100,100):
#     if i % 13 == 0 and i % 2 == 0:
#         print(i, i ** 2)
#     if cnt % 7 == 0 and i % 2 != 0:
#         print(i)
#
#     cnt += 1
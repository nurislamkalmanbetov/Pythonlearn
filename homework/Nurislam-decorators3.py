# 1
# Написать lambda которая принимает 3 параметра и умножает все параметры между собой. Функция должна вернуть строку:
# "Объём бассейна " и значение которое получилось.


# (lambda length, width, depth: print('Обьем бассейна: ', length*width*depth))(25,15,5)
# ___________________________________________________________________________________________________________
# 2
# Написать lambda которая получает сколько дней ПРОШЛО с нового года как параметр и говорит пользователю
# сколько дней ОСТАЛОСЬ до нового года.
# from datetime import date
#
# today = date.today()
# days = 365
# (lambda a : print("Осталось до Нового Года", (date(today.year + 1, 1, 1) - today).days, "дней")) (20)

# ___________________________________________________________________________________________________________
# 3
# Напишите программу которая выводит только нечётные числа с помощью рекурсии.
# def print_odd_numbers(a, n=1):
#     if n > a:
#         return
#     if n % 2 != 0:
#         print(n)
#     print_odd_numbers(a, n+2)
#
# n = int(input("Введите максимальное число: "))
# print_odd_numbers(n)

# ___________________________________________________________________________________________________________
# 4
# Напишите функцию которая принимает SET и рекурсивно удаляет оттуда по одному элементу при запуске.

# ___________________________________________________________________________________________________________
# 5
# Напишите функцию которая генерирует 100 рандомных чисел в диапазоне от 10 до 50 и возвращает их в листе.
# Напишите ДЕКОРАТОР для этой функции которая удалит все дубликаты в первой функции и вернёт всё так же лист.
# import random
#
# def remove_duplicates(func):
#     def wrapper(*args):
#         result = func(*args)
#         return list(set(result))
#     return wrapper
#
# @remove_duplicates
# def generate_random_numbers():
#     random_numbers = []
#     for i in range(100):
#         random_numbers.append(random.randint(10, 50))
#     return random_numbers
#
# print(generate_random_numbers())
# ___________________________________________________________________________________________________________
# 6
# Напишите функцию которая спрашивает у пользователя login и password. Напишите декоратор который шифрует эти
# данные и возвращает вам зашифрованные данные. (Можете воспользоваться функцией ord и char, можете загуглить...)
# def coding_passwords(func):
#     def wrapper():
#         result = func()
#         login,password = result
#         refreshed_login = [ord(char) for char in login] # char - это *args,**kwargs
#         refreshed_password = [ord(char) for char in password]
#         return (f"Зашифрованный логин - {refreshed_login} '\n',Зашифрованный Пароль - {refreshed_password}")
#     return wrapper
#
# @coding_passwords
# def login_password():
#     login = input("Введите логин: ")
#     password = input("Введите пароль: ")
#     return login, password
#
# login_password1 = login_password()
# print(login_password1)
# ___________________________________________________________________________________________________________
# 7
# Создайте lambda функцию которая принимает одно число и возвращает это число умноженное на 1.185. Вам дан список
# [1745345,98726,439872634,7312,64872,123687126,9312,4124,231,3123,34,3453] пройдите по списку и примените функцию
# к каждому числу

# my_list = [1745345, 98726, 439872634, 7312, 64872, 123687126, 9312, 4124, 231, 3123, 34, 3453]
# new_list = list(map(lambda x: x * 1.185, my_list))
# print(new_list)
# ___________________________________________________________________________________________________________







# Nurislam 01.02.2023
# ____________________________________________________________________________________________________________________
# PROBLEM 000:
# –ò–∑ Dictionary ‚Ññ1: –°–ª–æ–≤–∞—Ä—å ‚Ññ1: menu = {'lagman': 120, 'plov': '120', 'borsh': 100}
# –î–æ–±–∞–≤—å—Ç–µ –≤ –º–µ–Ω—é
#  'besh_barmak' –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–æ–∏—Ç  130 —Å–æ–º.
# –û–∫–∞–∑–∞–ª–æ—Å—å –ª–∞–≥–º–∞–Ω —Å–ª–∏—à–∫–æ–º –¥–µ—à–µ–≤—ã–π. –û–±–Ω–æ–≤–∏—Ç–µ —Ü–µ–Ω—É –Ω–∞ 135
# –í–∞—à –ø–æ–≤–∞—Ä –æ—Ç–≤—Ä–∞—Ç–∏—Ç–µ–ª—å–Ω–æ –≥–æ—Ç–æ–≤–∏—Ç –±–æ—Ä—â, –ø–æ—ç—Ç–æ–º—É —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –±–ª—é–¥–æ. –£–¥–∞–ª–∏—Ç—å borsh

# menu = {'lagman': 120, 'plov': '120', 'borsh': 100}
# print(menu.update({'besh_barmak': '130 som'}))
# print(menu.update({'besh_barmak': 135}))
# menu.pop('borsh')
# print(menu)
# # _________________________________________________________________________________________________________________
# PROBLEM 10:
# –ò–∑ Dictionary ‚Ññ1: menu = {'lagman': 120, 'plov': '120', 'borsh': 100}
# –î–æ–±–∞–≤—å—Ç–µ –≤ –º–µ–Ω—é –Ω–∞–ø–∏—Ç–∫–∏ –∫–∞–∫ –∫–ª—é—á "drinks",
# –ê —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤: ['Coca-Cola', 'Sprite', 'Fanta'] –∫–∞–∫ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ.

# menu = {'lagman': 120, 'plov': '120', 'borsh': 100}
# menu.update({'drinks': None})
# menu['drinks'] = 'Coca-Cola', 'Sprite', 'Fanta'
# print(menu)
# # _________________________________________________________________________________________________________________
# PROBLEM 020:
# –°–æ–∑–¥–∞–π—Ç–µ SET –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –≤—Å–µ –º–µ—Ç–æ–¥—ã  –¥–ª—è —Ä–∞–±–æ—Ç—ã  —Å  SET.
# –°–æ–∑–¥–∞–π—Ç–µ –≤—Ç–æ—Ä–æ–π SET –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ  –º–µ—Ç–æ–¥—ã  –¥–ª—è —Ä–∞–±–æ—Ç—ã  —Å  Dictionary –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Å–µ–≥–æ–¥–Ω—è —É–∑–Ω–∞–ª–∏.
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –ø–æ—Ö–æ–∂–∏ —É —ç—Ç–∏—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã–µ.
# set_metods = {"add", "clear", "copy", "difference", "difference_update", "discard", "intersection",
#                "intersection_update", "isdisjoint", "issubset", "issuperset", "pop", "remove", "symmetric_difference",
#                "symmetric_difference_update", "union", "update"}
# dict_metods = {"clear", "copy", "fromkeys", "get", "items", "keys",
#                 "pop", "popitem", "setdefault", "update", "values"}
# same_methods = set_metods.intersection(dict_metods)
# print(same_methods)
# # _________________________________________________________________________________________________________________
# PROBLEM 31:
# –°–æ–∑–¥–∞–π—Ç–µ –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å.
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ü–∏–∫–ª –∫–æ—Ç–æ—Ä—ã–π 3 —Ä–∞–∑–∞ —Å–ø—Ä–æ—Å–∏—Ç –µ–≥–æ –∏–º—è –∏ –µ–≥–æ –ø–∞—Ä–æ–ª—å.
# –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∫–ª—é—á, –∞ –ø–∞—Ä–æ–ª—å –∫–∞–∫ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ.

# dict1 = {'Bekjan': 'programmist',
#          'Janybek': 'desing',
#          'Asel': 'teacher',
#          'Neymar': 'soccer player',
#          'Avtandil': 'student'}
# for a, profession in dict1.items():
#     print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {0} –ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è {1}".format(a,profession))
# # _________________________________________________________________________________________________________________
# PROBLEM 27:
# –°–æ–∑–¥–∞–π—Ç–µ Dictionary —Å 5 —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≥–¥–µ –∫–ª—é—á–∏ —ç—Ç–æ –∏—Ö –∏–º–µ–Ω–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ –∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏—è.
# –° –ø–æ–º–æ—â—å —Ü–∏–∫–ª–∞ for –ø—Ä–æ–π—Ç–∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —Å—Ç—Ä–æ–∫—É:
# "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ <–ò–º—è>  –ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è <–ü—Ä–æ—Ñ–µ—Å—Å–∏—è>"

# info_1 = {'Nurislam': 'Software Engineer','Aidos': 'Devops', 'Aleksandr': 'Product manager',
#             'Bekjan': 'Project manager', 'Alisher': 'Golang Developer'}
# for name, profession in info_1.items():
#     print(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! –ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - {profession}.")  #{profession} - –æ–Ω —Å–∞–º –ø–æ—è–≤–∏–ª—Å—è??? –°–ø—Ä–æ—Å–∏—Ç—å
# # _________________________________________________________________________________________________________________
# PROBLEM 22:
# –°–æ–∑–¥–∞–π—Ç–µ —Ü–∏–∫–ª –∫–æ—Ç–æ—Ä—ã–π —Å–ø—Ä–∞–≤—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 10 —á–∏—Å–µ–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ SET.
# –°–¥–µ–ª–∞–π—Ç–µ —Ç–∞–∫ —á—Ç–æ–±—ã —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–≥ –ø–æ–º–µ–Ω—è—Ç—å –ø–æ–∑–∂–µ.

# numbers = set()
# for i in range(10):
#     number = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —á–∏—Å–ª–æ: "))
#     numbers.add(number)
#     print(numbers)
    # –≤ –¢–∞–ø–ª –Ω—É–∂–Ω–æ –±—ã–ª–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
# –°–¥–µ–ª–∞–π—Ç–µ —Ç–∞–∫ —á—Ç–æ–±—ã —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–≥ –ø–æ–º–µ–Ω—è—Ç—å –ø–æ–∑–∂–µ - –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å?
# _________________________________________________________________________________________________________________
# PROBLEM 11:
# –ï—Å—Ç—å —Å–ø–∏—Å–æ–∫ –Æ–∂–Ω–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω
# Google Colab -  south_american_countries = ['Argentina', 'Bolivia', 'Brazil', 'Chile', 'Colombia','Ecuador', 'Guyana',
#                                             'Paraguay', 'Peru', 'Suriname', 'Suriname', 'Uruguay', 'Venezuela']
# –≤ –∫–æ—Ç–æ—Ä–æ–º –°—É—Ä–∏–Ω–∞–º –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –¥–≤–∞ —Ä–∞–∑–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É,
# –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª–∏—Ç –¥—É–±–ª–∏—Ä—É—é—â—É—é—Å—è –∑–∞–ø–∏—Å—å, –∏ –≤–æ–∑–≤—Ä–∞—Ç–∏—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Å–ø–∏—Å–æ–∫

# south_american_countries = ['Argentina', 'Bolivia', 'Brazil', 'Chile', 'Colombia','Ecuador', 'Guyana',
#                             'Paraguay', 'Peru', 'Suriname', 'Suriname', 'Uruguay', 'Venezuela']
# new_info = list(set(south_american_countries))
# print(new_info)
# _________________________________________________________________________________________________________________
# PROBLEM 101:
# –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –Ω–∞ –ò—Å—Å—ã–∫-–ö—É–ª—å. –ü–æ–∫–∞ –≤–∞—à —á–µ–º–æ–¥–∞–Ω –ø—É—Å—Ç:
# suitcase = []
# –û–¥–Ω–∞–∫–æ –æ–Ω –º–æ–∂–µ—Ç –≤–º–µ—Å—Ç–∏—Ç—å –≤—Å–µ–≥–æ 5 –≤–µ—â–µ–π.
# –ü–æ–ª–æ–∂–∏—Ç–µ 5 –≤–µ—â–µ–π –≤ —á–µ–º–æ–¥–∞–Ω.–í—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –∏ —Ä–µ—à–∏–ª–∏ —É–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—â—å.

# suitcase = []
# suitcase.extend(["–ó–∞—Ä—è–¥–∫—É", "Power-bank", "–î—É—Ö–∏", "–ó–∞—â–∏—Ç—É üòÅ", "–ì–µ–ª—å –¥–ª—è –≤–æ–ª–æ—Å", "–¢—É—Ñ–ª–∏"])
# suitcase.pop() # pop() - —É–¥–∞–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω—é—é?! –°–ø—Ä–æ—Å–∏—Ç—å
# print(suitcase)
# example 2
# suitcase = []
# counter =0
# while counter <5:
#   veshi = input(f"–í–≤–µ–¥–∏—Ç–µ –≤–µ—â—å: (counter+1): ")
#   suitcase.append(veshi)
#   counter +=1
# print(suitcase[:4])
# _________________________________________________________________________________________________________________
# PROBLEM 001:
# farm_1 = {"dog", "cat", "pig", "sheep"}
# farm_2 = {"chicken", "cat", "parrot", "pig"} # –í—Ç–æ—Ä—É—é —Ñ–µ—Ä–º—É, —è —Å–∞–º –ø—Ä–æ–ø–∏—Å–∞–ª
# –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π: –í—ã–≤–µ–¥–µ—Ç –Ω–æ–≤–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –µ—Å—Ç—å –∫–∞–∫ –≤
# –ø–µ—Ä–≤–æ–π —Ñ–µ—Ä–º–µ, —Ç–∞–∫ –∏ –≤–æ –≤—Ç–æ—Ä–æ–π.

# farm_1 = {"dog", "cat", "mouse", "sheep"}
# farm_2 = {"chicken", "cat", "parrot", "pig"}
# print("–ï—Å—Ç—å –≤ –¥–≤—É—Ö —Ñ–µ—Ä–º–∞—Ö: ", farm_1.intersection(farm_2))
# print("–£ –≤—Ç–æ—Ä–æ–π –µ—Å—Ç—å: ", farm_2.difference(farm_1))
# _________________________________________________________________________________________________________________
# PROBLEM 100:
# farm_1 = {"dog", "cat", "pig", "sheep"}
# farm_2 = {"chicken", "cat", "parrot", "pig"} # –í—Ç–æ—Ä—É—é —Ñ–µ—Ä–º—É, —è —Å–∞–º –ø—Ä–æ–ø–∏—Å–∞–ª
# –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–µ–¥–µ—Ç –Ω–æ–≤–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ, —Å–æ—Å—Ç–æ—è—â–µ–µ –∏–∑ –∂–∏–≤–æ—Ç–Ω—ã—Ö,
# –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤–æ –≤—Ç–æ—Ä–æ–π —Ñ–µ—Ä–º–µ, –Ω–æ –Ω–µ—Ç –≤ –ø–µ—Ä–≤–æ–π.
# farm_1 = {"dog", "cat", "pig", "sheep"}
# farm_2 = {"chicken", "cat", "parrot", "pig"}
# print("–í—Å–µ –∂–∏–≤–æ—Ç–Ω—ã–µ, –≤–æ –≤—Ç–æ—Ä–æ–π —Ñ–µ—Ä–º–µ: ", farm_2)
# print("–£ –≤—Ç–æ—Ä–æ–π —Ñ–µ—Ä–º—ã, –µ—Å—Ç—å, –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –ø–µ—Ä–≤–æ–π —Ñ–µ—Ä–º—ã: ", farm_2.difference(farm_1))
# print("–ù–µ—Ç—É —É –ø–µ—Ä–≤–æ–π —Ñ–µ—Ä–º—ã: ", farm_1.intersection(farm_2))